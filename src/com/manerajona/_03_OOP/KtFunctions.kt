package com.manerajona._03_OOP

fun labelSum(arg0: Int, arg1: Int, label: String): String {
    return "$label ${arg0 + arg1}"
}

fun labelMultiply(arg0: Int, arg1: Int, label: String) = "$label ${arg0 * arg1}"

// default argument values
fun labelDivision(dividend: Int, divisor: Int, label: String = "Result =") = "$label ${dividend.toFloat() / divisor}"

// inline functions (directly generated bytecode)
inline fun labelSubtraction(minuend: Int, subtrahend: Int, label: String = "Result =") = "$label ${minuend - subtrahend}"

// extension functions
fun String.addLineBreak(): String = "$this\n"
fun String.removeLineBreak(): String = this.dropLast(2)

// variadic functions
fun powArgs(vararg args: Int): String {
    var result = ""
    args.forEach { result += labelMultiply(it, it, "The pow of $it is").addLineBreak() }
    return result.removeLineBreak()
}

private val INT_ARRAY = intArrayOf(1, 2, 3, 4, 5)

// Unit is a kind of void
fun printResults(arg0: Int, arg1: Int, label: String): Unit {
    println(labelSum(arg0, arg1, label))
    println(labelMultiply(arg0, arg1, label))
    println(labelDivision(arg0, arg1, label))
    println(labelDivision(arg0, arg1))
    println(labelSubtraction(subtrahend = arg0, minuend = arg1))
    println(powArgs(1, 2, 3, 4, 5))

    // spread operator
    println(powArgs(*INT_ARRAY))
}

fun main(args: Array<String>) = printResults(2, 3, "The result is")
